#log4j.rootLogger = warn, stdout,File
log4j.rootLogger = warn, stdout
log4j.logger.com = debug

# 配置输出到控制台   
log4j.appender.stdout = org.apache.log4j.ConsoleAppender   
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
# ConversionPattern参数的格式含义
# %c 输出日志信息所属的类的全名
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出类似：2002-10-18 22:10:28
# %l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行
# %m 输出代码中指定的信息，如log(message)中的message
# %n 输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n”
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推
# %r 输出自应用启动到输出该日志信息所耗费的毫秒数
# %t 输出产生该日志事件的线程名   
log4j.appender.stdout.layout.ConversionPattern = %d{HH:mm:ss}[%-5p] - %m%n
# 配置输出文件
log4j.appender.File = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.File = org.apache.log4j.RollingFileAppender
#log4j.appender.File.layout = org.apache.log4j.HTMLLayout 
# 变量可用jvm的-DwebappHome=/path传入
log4j.appender.File.File = ${webappHome}/logs/${date}_log.txt
log4j.appender.File.MaxFileSize =  100KB  

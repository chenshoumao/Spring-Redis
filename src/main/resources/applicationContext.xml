<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	<context:component-scan base-package="com.csm" />
	<!-- 支持aop注解 -->
	<aop:aspectj-autoproxy />
	<!-- 支持注解配置 -->
	<context:annotation-config />
	
	<!-- http://www.cnblogs.com/liujiduo/p/5004691.html -->
	<context:property-placeholder location="classpath:datasource.properties" />
	<bean id="dataSourceMySql" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${mysql.jdbc.driverClass}" />
		<property name="jdbcUrl" value="${mysql.jdbc.url}" />
		<property name="user" value="${mysql.jdbc.user}" />
		<property name="password" value="${mysql.jdbc.password}" />
		<property name="initialPoolSize" value="${mysql.jdbc.initialPoolSize}" />
		<property name="minPoolSize" value="${mysql.jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${mysql.jdbc.maxPoolSize}" />
		<property name="checkoutTimeout" value="${mysql.jdbc.checkoutTimeout}" />
		<property name="idleConnectionTestPeriod" value="${mysql.jdbc.idleConnectionTestPeriod}" />
		<property name="maxIdleTime" value="${mysql.jdbc.maxIdleTime}" />
		<property name="maxStatements" value="${mysql.jdbc.maxStatements}" />
		<property name="testConnectionOnCheckout" value="${mysql.jdbc.testConnectionOnCheckout}" />
	</bean>

	<bean id="dataSourceOracle" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${oracle.jdbc.driverClass}" />
		<property name="jdbcUrl" value="${oracle.jdbc.url}" />
		<property name="user" value="${oracle.jdbc.user}" />
		<property name="password" value="${oracle.jdbc.password}" />
		<property name="initialPoolSize" value="${oracle.jdbc.initialPoolSize}" />
		<property name="minPoolSize" value="${oracle.jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${oracle.jdbc.maxPoolSize}" />
		<property name="checkoutTimeout" value="${oracle.jdbc.checkoutTimeout}" />
		<property name="idleConnectionTestPeriod" value="${oracle.jdbc.idleConnectionTestPeriod}" />
		<property name="maxIdleTime" value="${oracle.jdbc.maxIdleTime}" />
		<property name="maxStatements" value="${oracle.jdbc.maxStatements}" />
		<property name="testConnectionOnCheckout" value="${oracle.jdbc.testConnectionOnCheckout}" />
	</bean>
	
	<bean id="dataSource" class="com.csm.core.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="dataSourceMySql" value-ref="dataSourceMySql" />
				<entry key="dataSourceOracle" value-ref="dataSourceOracle" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceMySql" />
	</bean>
	
	 
	<!-- <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://192.168.145.131:3306/test</value>
		</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value>root</value>
		</property>
	</bean> -->

	 
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate4.HibernateTemplate"> -->
		<property name="dataSource" ref="dataSource" />

		<property name="hibernateProperties">
			<!-- 从配置文件中得到各种属性的值，更改的时候只需要改变配置文件从的值即可 -->
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.format_sql">false</prop>
			 
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
		 		 <!-- 开启查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 开启二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- 高速缓存提供程序 --> 
				<!-- 由于spring也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
				<prop key="hibernate.cache.region.factory_class">
    					 org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.csm.entity</value> 
			</list>
		</property>
	</bean>

	 

	<!-- 定义事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	
	<!-- 申明annotation 加载事务驱动 -->
	<tx:annotation-driven transaction-manager="txManager"
		proxy-target-class="true" />
	<!-- hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="import*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="parse*" propagation="REQUIRED" /> 
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="put*" propagation="REQUIRED" />
			<tx:method name="use*" propagation="REQUIRED" />
			<tx:method name="start*" propagation="REQUIRED" />
			<tx:method name="stop*" propagation="REQUIRED" />
			<tx:method name="set*" propagation="REQUIRED" />
			<tx:method name="execute*" propagation="REQUIRED" />
		 	<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" /> 
			<tx:method name="*" propagation="REQUIRED" read-only="true"  />
		</tx:attributes>
	</tx:advice>
	
	
	
	
	<aop:config expose-proxy="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut"
			expression="(
			execution(* com.csm.service..*.*(..)))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
	
	<bean id="dataSourceInterceptor" class="com.csm.core.DataSourceInterceptor" />
	<aop:config>
		<aop:aspect id="dataSourceAspect" ref="dataSourceInterceptor">
			<aop:pointcut id="dsMysql" expression="execution(* com.csm.controller.mysql.*.*(..))" />
			<aop:pointcut id="dsOracle" expression="execution(* com.csm.controller.oracle.*.*(..))" />
			<aop:before method="setdataSourceMysql" pointcut-ref="dsMysql"/>
			<aop:before method="setdataSourceOracle" pointcut-ref="dsOracle"/>
		</aop:aspect>
	</aop:config>

		<!-- 调度工厂 -->
<!-- <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
  <property name="dataSource">    
           <ref bean="dataSource" />    
       </property>  
   <property name="configLocation" value="classpath:quartz.properties" />  
       <property name="applicationContextSchedulerContextKey"    
           value="applicationContextKey" />    
       <property name="autoStartup" value="true" />
</bean> -->


	
	
		    <!-- 启用 annotation 配置模式 -->
 <!-- <dwr:configuration>
        <dwr:convert type="bean" class="java.lang.Object"/>
    </dwr:configuration>
    <dwr:annotation-config id="dwrAnnotationConfig"/>
    <dwr:url-mapping/>
    <dwr:controller id="dwrController" debug="false"/>
    <dwr:annotation-scan base-package="com.gzsolartech.smartforms.webload"
                         scanDataTransferObject="true" scanRemoteProxy="true"/>  -->
 
</beans>